name: Android Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      track:
        description: 'Release track'
        required: true
        default: 'internal'
        type: choice
        options:
          - internal
          - beta
          - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Android App
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint:check

      - name: Run type checking
        run: npm run compile

      - name: Run tests
        run: npm test

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Create Google Service Account file
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}' > google-service-account.json

      - name: Determine release track
        id: track
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "track=${{ github.event.inputs.track }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/tags/v*-beta* ]]; then
            echo "track=beta" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/tags/v*-alpha* ]]; then
            echo "track=internal" >> $GITHUB_OUTPUT
          else
            echo "track=production" >> $GITHUB_OUTPUT
          fi

      - name: Build Android App Bundle
        run: |
          if [[ "${{ steps.track.outputs.track }}" == "internal" ]]; then
            eas build --platform android --profile preview --non-interactive
          else
            eas build --platform android --profile production --non-interactive
          fi

      - name: Submit to Google Play Store
        run: |
          if [[ "${{ steps.track.outputs.track }}" == "production" ]]; then
            eas submit --platform android --profile production --non-interactive
          elif [[ "${{ steps.track.outputs.track }}" == "beta" ]]; then
            eas submit --platform android --profile beta --non-interactive
          else
            eas submit --platform android --profile internal --non-interactive
          fi

      - name: Clean up service account file
        if: always()
        run: rm -f google-service-account.json

      - name: Get build info
        id: build-info
        run: |
          BUILD_URL=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl // empty')
          BUILD_ID=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].id // empty')
          echo "build_url=$BUILD_URL" >> $GITHUB_OUTPUT
          echo "build_id=$BUILD_ID" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: PauseOne ${{ github.ref_name }}
          body: |
            ## PauseOne Android Release ${{ github.ref_name }}
            
            **Release Track**: ${{ steps.track.outputs.track }}
            **Build ID**: ${{ steps.build-info.outputs.build_id }}
            
            ### What's New
            - Bug fixes and performance improvements
            - Updated dependencies
            
            ### Download
            - **Google Play Store**: [Download from Play Store](https://play.google.com/store/apps/details?id=com.thayminhtue.pauseone)
            - **Direct APK**: ${{ steps.build-info.outputs.build_url }}
            
            ### Installation
            ```bash
            # Install via ADB (for APK)
            adb install pauseone.apk
            ```
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}

  notify:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: always()
    name: Notify Build Status
    
    steps:
      - name: Build Success Notification
        if: needs.build-and-deploy.result == 'success'
        run: |
          echo "‚úÖ PauseOne Android build and deployment successful!"
          echo "üéØ Track: ${{ needs.build-and-deploy.outputs.track }}"
          echo "üì± Check Google Play Console for deployment status"
          
      - name: Build Failure Notification
        if: needs.build-and-deploy.result == 'failure'
        run: |
          echo "‚ùå PauseOne Android build failed!"
          echo "üîç Check the logs above for details"
          exit 1

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()
    name: Security Scan
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run security audit
        run: |
          npm audit --audit-level moderate
          
      - name: Check for sensitive files
        run: |
          # Check for accidentally committed sensitive files
          if find . -name "*.keystore" -o -name "*.jks" -o -name "*service-account*.json" | grep -v node_modules; then
            echo "‚ùå Sensitive files found in repository!"
            exit 1
          else
            echo "‚úÖ No sensitive files found"
          fi

  performance-test:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success() && github.ref == 'refs/heads/main'
    name: Performance Testing
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Bundle size analysis
        run: |
          npm run bundle:web
          echo "üìä Bundle Analysis:"
          du -sh dist/
          find dist/ -name "*.js" -exec du -sh {} \; | sort -hr | head -10
