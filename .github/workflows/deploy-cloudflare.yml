name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy PauseOne to Cloudflare Pages
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint:check

      - name: Run type checking
        run: npm run compile

      - name: Run tests
        run: npm test

      - name: Build web application
        run: npm run bundle:web
        env:
          NODE_ENV: production
          EXPO_PUBLIC_APP_ENV: production

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: pauseone
          directory: dist
          # Optional: Use different project names for different branches
          # projectName: ${{ github.ref == 'refs/heads/main' && 'pauseone' || 'pauseone-staging' }}

      - name: Add deployment comment (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployment } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              per_page: 1
            });
            
            if (deployment.length > 0) {
              const deploymentUrl = `https://${context.sha.substring(0, 8)}.pauseone.pages.dev`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `üöÄ **Preview deployment ready!**
                
                **URL**: ${deploymentUrl}
                **Commit**: ${context.sha.substring(0, 8)}
                **Branch**: ${context.ref}
                
                The preview will be available for testing once the deployment completes.`
              });
            }

  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    name: Lighthouse Performance Audit
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 60

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://pauseone.pages.dev
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  notify:
    runs-on: ubuntu-latest
    needs: [deploy, lighthouse]
    if: always() && github.ref == 'refs/heads/main'
    name: Notify Deployment Status
    
    steps:
      - name: Deployment Success
        if: needs.deploy.result == 'success'
        run: |
          echo "‚úÖ PauseOne successfully deployed to Cloudflare Pages!"
          echo "üåê Production URL: https://pauseone.pages.dev"
          
      - name: Deployment Failed
        if: needs.deploy.result == 'failure'
        run: |
          echo "‚ùå PauseOne deployment failed!"
          exit 1
